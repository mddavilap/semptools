% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/set_sem_position.R
\name{set_sem_position}
\alias{set_sem_position}
\title{Set the positions of factors and other aspects of a SEM graph with latent varialbes by semPaths}
\usage{
set_sem_position(
  semPaths_plot,
  indicator_order = NULL,
  indicator_factor = NULL,
  factor_layout = NULL,
  factor_point_to = NULL,
  indicator_push = NULL,
  indicator_spread = NULL,
  loading_position = 0.5
)
}
\arguments{
\item{semPaths_plot}{A qgraph object generated by semPaths, or a similar qgrpah
ojbect modified by other semptools functions.}

\item{indicator_order}{A string vector of the indicators. The order of the names
is the order of the indicators in the graph, when they 
are drawn on the bottom of the graph. The indicators
should be grouped by the factors on which they load on.
For example, if x1, x2, x4 load on f2, and x3, x5, x6 
load on f1, then vector should be either c("x1", "x2", "x4", "x3", "x5", "x6")
or c("x3", "x5", "x6", "x1", "x2", "x4"). Indictors within
a group can be ordered in any way.}

\item{indicator_factor}{A string vector of the same length of the indicator_order,
 storing the name of the factor for which each of the indicator 
For example, if x1, x2, x4 load on f2, and x3, x5, x6 
load on f1, and indicator_order is c("x3", "x5", "x6", "x1", "x2", "x4"),
then indicator_factor should be c("f2", "f2", "f2", "f1", "f1", "f1").}

\item{factor_layout}{A matrix of arbirary size. This matrix will serve as a grid for 
users to specify where each latent factor should be placed 
approximately on the graph. Each cell should contain NA or 
the name of a latent factor. The locations of all latent factors
must be explicitly specified by this matrix.}

\item{factor_point_to}{A matrix of the same size as factor_layout. This matrix 
  specifies where the indicators of each factor are positioned.
Each cell should contain NA or one of these strings: 
"down", "left", "up", or "right". This is the direction that the 
corresponding latent factor (specified in factor_layout)
points to its indicators.}

\item{indicator_push}{(Optional) This argument is used to adjust the position of 
indicators of selected latent factors. It must be a list of lists.
Each sublist has two named elements: node, the name of a latent 
factor, and push, how the positions of its indicators will be 
adjusted. If push = 1, there is no change. Larger than one,
the indicators will be "pushed" away from the latent factors.
Less than one, the indicators will be "pulled" to the latent 
factors.}

\item{indicator_spread}{(Optional) This argument is used to adjust the distance between
indicators of selected latent factors. It must be a list of lists.
Each sublist has two named elements: node, the name of a latent 
factor, and spread, how the distance between indicators will be 
adjusted. If spread = 1, there is no change. Larger than one,
the indicators will be "spread" away from each other.
Less than one, the indicators will be placed closer to each
others.}

\item{loading_position}{Default is .5. This is used adjust the position of the loadings.
If this is one single number, it will be used to set the positions
of all loadings. If it is .5, the loadings are placed on the center of 
the arrows. Larger the number, closer the loadings to the indicators.
Smaller the number, closer to the latent factors.
This argument also accepts a list of lists, allowing users to 
sepcify the positions of loadindgs for each factor separately. 
Each sublist will have two named elements: node, the name of the 
latent factor, and position, the positions of all loadings of this 
factors. The values of these positions are used in the same way as 
specifying one single number.}
}
\value{
A qgrpah based on the original one, with various aspects of the model modified.
}
\description{
Set the positions of factors and other aspects of a SEM graph with latent varialbes by semPaths.
}
\details{
Modified a qgraph object generated by semPaths based on a SEM model
        with latent factors. Currently only support a model in which all 
        exogenous variables are latent factors, and all observed variables are 
        indicators. If a variable has only one indicator, it is easier to
}
\examples{
library(lavaan)
library(semPlot)
library(magrittr)
mod <- 
 'f1 =~ x01 + x02 + x03
  f2 =~ x04 + x05 + x06 + x07
  f3 =~ x08 + x09 + x10
  f4 =~ x11 + x12 + x13 + x14
  f3 ~  f1 + f2
  f4 ~  f1 + f3
 '
fit_sem <- lavaan::sem(mod, sem_example)
lavaan::parameterEstimates(fit_sem)[, c("lhs", "op", "rhs", "est", "pvalue")]
p <- semPaths(fit_sem, whatLabels="est",
       sizeMan = 5,
       nCharNodes = 0, nCharEdges = 0,
       edge.width = 0.8, node.width = 0.7,
       edge.label.cex = 0.6,
       style = "ram", 
       mar = c(10,10,10,10))
indicator_order  <- c("x04", "x05", "x06", "x07", "x01", "x02", "x03", 
                     "x11", "x12", "x13", "x14", "x08", "x09", "x10")
indicator_factor <- c( "f2",  "f2",  "f2",  "f2",  "f1",  "f1",  "f1",  
                     "f4",  "f4",  "f4",  "f4",  "f3",  "f3",  "f3")
factor_layout <- matrix(c("f1",   NA,   NA,
                           NA, "f3", "f4",
                         "f2",   NA,   NA), byrow = TRUE, 3, 3)
factor_point_to <- matrix(c("left",     NA,      NA,
                               NA, "down", "down",
                           "left",     NA,      NA), byrow = TRUE, 3, 3)
indicator_push <- list(list(node = "f3", push =   2),
                      list(node = "f4", push =   1.5))
indicator_spread <- list(list(node = "f1", spread =   2),
                        list(node = "f2", spread =   2))
loading_position <- list(list(node = "f1", position = .5),
                        list(node = "f2", position = .8),
                        list(node = "f3", position = .8))
p2 <- set_sem_position(p, 
                      indicator_order = indicator_order,
                      indicator_factor = indicator_factor,
                      factor_layout = factor_layout,
                      factor_point_to = factor_point_to,
                      indicator_push = indicator_push,
                      indicator_spread = indicator_spread,
                      loading_position = loading_position) \%>\%
        set_curve(list(list(from = "f1", to = "f2", new_curve =  -1),
                       list(from = "f1", to = "f4", new_curve = 1.5))) \%>\%
        mark_sig(fit_sem) \%>\% 
        mark_se(fit_sem, sep = "\n")
plot(p2)

}
